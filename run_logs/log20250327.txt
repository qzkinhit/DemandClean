/Users/qianzekai/PycharmProjects/TolerDM/TolerRL/bin/python /Users/qianzekai/PycharmProjects/TolerDM/expdraw.py
/Users/qianzekai/PycharmProjects/TolerDM/TolerRL/lib/python3.9/site-packages/urllib3/__init__.py:35: NotOpenSSLWarning: urllib3 v2 only supports OpenSSL 1.1.1+, currently the 'ssl' module is compiled with 'LibreSSL 2.8.3'. See: https://github.com/urllib3/urllib3/issues/3020
  warnings.warn(
Running experiment with error rate: 0.1
生成分类任务数据集...
Feature importance: {'feature_0': 0.14157991523061256, 'feature_1': 0.19209686747768365, 'feature_2': 0.12382461744888328, 'feature_3': 0.11656610623243421, 'feature_4': 0.4259324936103864}
注入缺失值错误: 共注入 162 个单元格错误.
注入异常值错误: 共注入 155 个单元格错误.
注入噪声错误: 共注入 155 个单元格错误.
  Testing model: random_forest
/Users/qianzekai/PycharmProjects/TolerDM/TolerRL/lib/python3.9/site-packages/gym/spaces/box.py:127: UserWarning: WARN: Box bound precision lowered by casting to float32
  logger.warn(f"Box bound precision lowered by casting to {self.dtype}")
2025-03-25 20:27:03.078690: I metal_plugin/src/device/metal_device.cc:1154] Metal device set to: Apple M2
2025-03-25 20:27:03.078735: I metal_plugin/src/device/metal_device.cc:296] systemMemory: 16.00 GB
2025-03-25 20:27:03.078742: I metal_plugin/src/device/metal_device.cc:313] maxCacheSize: 5.33 GB
2025-03-25 20:27:03.078796: I tensorflow/core/common_runtime/pluggable_device/pluggable_device_factory.cc:305] Could not identify NUMA node of platform GPU ID 0, defaulting to 0. Your kernel may not have been built with NUMA support.
2025-03-25 20:27:03.078809: I tensorflow/core/common_runtime/pluggable_device/pluggable_device_factory.cc:271] Created TensorFlow device (/job:localhost/replica:0/task:0/device:GPU:0 with 0 MB memory) -> physical PluggableDevice (device: 0, name: METAL, pci bus id: <undefined>)
Training new model with learning rate: 0.001
Training episodes:   0%|          | 0/100 [00:00<?, ?it/s]2025-03-25 20:27:20.356957: I tensorflow/core/grappler/optimizers/custom_graph_optimizer_registry.cc:117] Plugin optimizer for device_type GPU is enabled.
Training episodes:  10%|█         | 10/100 [03:33<32:06, 21.40s/it]Episode 10/100 - Avg Reward: -317.00, Avg Steps: 472.00, Epsilon: 0.9511
Training episodes:  19%|█▉        | 19/100 [07:42<44:42, 33.11s/it]WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`.
Episode 20/100 - Avg Reward: -277.11, Avg Steps: 472.00, Epsilon: 0.9046
Model saved to saved_models/default_agent.h5 after episode 20/100
Training episodes:  30%|███       | 30/100 [11:50<26:55, 23.08s/it]Episode 30/100 - Avg Reward: -252.02, Avg Steps: 472.00, Epsilon: 0.8604
Training episodes:  39%|███▉      | 39/100 [14:52<17:38, 17.36s/it]WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`.
Training episodes:  40%|████      | 40/100 [15:07<16:25, 16.43s/it]Episode 40/100 - Avg Reward: -241.55, Avg Steps: 472.00, Epsilon: 0.8183
Model saved to saved_models/default_agent.h5 after episode 40/100
Training episodes:  50%|█████     | 50/100 [17:29<12:01, 14.42s/it]Episode 50/100 - Avg Reward: -220.32, Avg Steps: 472.00, Epsilon: 0.7783
Training episodes:  59%|█████▉    | 59/100 [19:41<10:01, 14.68s/it]WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`.
Episode 60/100 - Avg Reward: -195.31, Avg Steps: 472.00, Epsilon: 0.7403
Model saved to saved_models/default_agent.h5 after episode 60/100
Training episodes:  70%|███████   | 70/100 [22:27<07:34, 15.16s/it]Episode 70/100 - Avg Reward: -176.35, Avg Steps: 472.00, Epsilon: 0.7041
Training episodes:  79%|███████▉  | 79/100 [24:47<05:26, 15.57s/it]WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`.
Episode 80/100 - Avg Reward: -146.47, Avg Steps: 472.00, Epsilon: 0.6696
Model saved to saved_models/default_agent.h5 after episode 80/100
Training episodes:  90%|█████████ | 90/100 [27:57<02:57, 17.71s/it]Episode 90/100 - Avg Reward: -149.01, Avg Steps: 472.00, Epsilon: 0.6369
Training episodes:  99%|█████████▉| 99/100 [30:36<00:17, 17.65s/it]WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`.
Episode 100/100 - Avg Reward: -127.62, Avg Steps: 472.00, Epsilon: 0.6058
Model saved to saved_models/default_agent.h5 after episode 100/100
Training completed. Final model saved to saved_models/default_agent.h5
生成分类任务数据集...
Training episodes: 100%|██████████| 100/100 [30:54<00:00, 18.55s/it]
WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`.
注入缺失值错误: 共注入 162 个单元格错误.
注入异常值错误: 共注入 158 个单元格错误.
注入噪声错误: 共注入 147 个单元格错误.
/Users/qianzekai/PycharmProjects/TolerDM/TolerRL/lib/python3.9/site-packages/gym/spaces/box.py:127: UserWarning: WARN: Box bound precision lowered by casting to float32
  logger.warn(f"Box bound precision lowered by casting to {self.dtype}")
Evaluating strategies...
Do Nothing: {'accuracy': 0.7466666666666667, 'f1_score': 0.7462606837606837}
Delete All: {'accuracy': 0.7233333333333334, 'f1_score': 0.7222191233726392}
Repair All: {'accuracy': 0.74, 'f1_score': 0.7397107897664073}
RL Optimal: {'accuracy': 0.7533333333333333, 'f1_score': 0.7524421249832731}
/Users/qianzekai/PycharmProjects/TolerDM/TolerRL/lib/python3.9/site-packages/gym/spaces/box.py:127: UserWarning: WARN: Box bound precision lowered by casting to float32
  logger.warn(f"Box bound precision lowered by casting to {self.dtype}")
  Testing model: svm
Training new model with learning rate: 0.001
Training episodes:  10%|█         | 10/100 [03:27<31:00, 20.67s/it]Episode 10/100 - Avg Reward: -323.44, Avg Steps: 472.00, Epsilon: 0.9511
Training episodes:  19%|█▉        | 19/100 [06:27<26:31, 19.64s/it]WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`.
Episode 20/100 - Avg Reward: -289.25, Avg Steps: 472.00, Epsilon: 0.9046
Training episodes:  20%|██        | 20/100 [06:47<26:03, 19.55s/it]Model saved to saved_models/default_agent.h5 after episode 20/100
Training episodes:  30%|███       | 30/100 [10:05<23:14, 19.91s/it]Episode 30/100 - Avg Reward: -268.07, Avg Steps: 472.00, Epsilon: 0.8604
Training episodes:  39%|███▉      | 39/100 [13:08<20:49, 20.49s/it]WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`.
Episode 40/100 - Avg Reward: -245.02, Avg Steps: 472.00, Epsilon: 0.8183
Model saved to saved_models/default_agent.h5 after episode 40/100
Training episodes:  50%|█████     | 50/100 [16:56<17:16, 20.73s/it]Episode 50/100 - Avg Reward: -223.54, Avg Steps: 472.00, Epsilon: 0.7783
Training episodes:  59%|█████▉    | 59/100 [20:08<14:39, 21.45s/it]WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`.
Episode 60/100 - Avg Reward: -214.79, Avg Steps: 472.00, Epsilon: 0.7403
Model saved to saved_models/default_agent.h5 after episode 60/100
Training episodes:  70%|███████   | 70/100 [24:10<11:07, 22.24s/it]Episode 70/100 - Avg Reward: -181.56, Avg Steps: 472.00, Epsilon: 0.7041
Training episodes:  79%|███████▉  | 79/100 [27:32<07:55, 22.65s/it]WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`.
Training episodes:  80%|████████  | 80/100 [27:54<07:32, 22.65s/it]Episode 80/100 - Avg Reward: -160.63, Avg Steps: 472.00, Epsilon: 0.6696
Model saved to saved_models/default_agent.h5 after episode 80/100
Training episodes:  90%|█████████ | 90/100 [31:45<03:49, 22.93s/it]Episode 90/100 - Avg Reward: -149.71, Avg Steps: 472.00, Epsilon: 0.6369
Training episodes:  99%|█████████▉| 99/100 [35:13<00:22, 22.95s/it]WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`.
Episode 100/100 - Avg Reward: -147.15, Avg Steps: 472.00, Epsilon: 0.6058
Model saved to saved_models/default_agent.h5 after episode 100/100
Training completed. Final model saved to saved_models/default_agent.h5
生成分类任务数据集...
注入缺失值错误: 共注入 160 个单元格错误.
Training episodes: 100%|██████████| 100/100 [35:36<00:00, 21.37s/it]
WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`.
注入异常值错误: 共注入 158 个单元格错误.
/Users/qianzekai/PycharmProjects/TolerDM/TolerRL/lib/python3.9/site-packages/gym/spaces/box.py:127: UserWarning: WARN: Box bound precision lowered by casting to float32
  logger.warn(f"Box bound precision lowered by casting to {self.dtype}")
注入噪声错误: 共注入 150 个单元格错误.
Evaluating strategies...
Do Nothing: {'accuracy': 0.77, 'f1_score': 0.7699769976997699}
Delete All: {'accuracy': 0.78, 'f1_score': 0.7797552836484983}
Repair All: {'accuracy': 0.77, 'f1_score': 0.7699974444160491}
RL Optimal: {'accuracy': 0.7633333333333333, 'f1_score': 0.7633096642997632}
  Testing model: logistic_regression
/Users/qianzekai/PycharmProjects/TolerDM/TolerRL/lib/python3.9/site-packages/gym/spaces/box.py:127: UserWarning: WARN: Box bound precision lowered by casting to float32
  logger.warn(f"Box bound precision lowered by casting to {self.dtype}")
Training new model with learning rate: 0.001
Training episodes:  10%|█         | 10/100 [01:32<14:00,  9.34s/it]Episode 10/100 - Avg Reward: -311.89, Avg Steps: 472.00, Epsilon: 0.9511
Training episodes:  19%|█▉        | 19/100 [02:59<13:18,  9.86s/it]WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`.
Episode 20/100 - Avg Reward: -281.71, Avg Steps: 472.00, Epsilon: 0.9046
Model saved to saved_models/default_agent.h5 after episode 20/100
Training episodes:  30%|███       | 30/100 [04:51<11:59, 10.27s/it]Episode 30/100 - Avg Reward: -267.47, Avg Steps: 472.00, Epsilon: 0.8604
Training episodes:  39%|███▉      | 39/100 [06:27<10:56, 10.76s/it]WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`.
Training episodes:  40%|████      | 40/100 [06:38<10:50, 10.85s/it]Episode 40/100 - Avg Reward: -249.61, Avg Steps: 472.00, Epsilon: 0.8183
Model saved to saved_models/default_agent.h5 after episode 40/100
Training episodes:  50%|█████     | 50/100 [08:29<09:24, 11.29s/it]Episode 50/100 - Avg Reward: -217.64, Avg Steps: 472.00, Epsilon: 0.7783
Training episodes:  59%|█████▉    | 59/100 [10:13<07:56, 11.63s/it]WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`.
Episode 60/100 - Avg Reward: -197.67, Avg Steps: 472.00, Epsilon: 0.7403
Training episodes:  60%|██████    | 60/100 [10:25<07:42, 11.56s/it]Model saved to saved_models/default_agent.h5 after episode 60/100
Training episodes:  70%|███████   | 70/100 [12:25<06:05, 12.19s/it]Episode 70/100 - Avg Reward: -180.02, Avg Steps: 472.00, Epsilon: 0.7041
Training episodes:  79%|███████▉  | 79/100 [14:16<04:20, 12.39s/it]WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`.
Episode 80/100 - Avg Reward: -163.33, Avg Steps: 472.00, Epsilon: 0.6696
Training episodes:  80%|████████  | 80/100 [14:29<04:11, 12.59s/it]Model saved to saved_models/default_agent.h5 after episode 80/100
Training episodes:  90%|█████████ | 90/100 [16:36<02:07, 12.77s/it]Episode 90/100 - Avg Reward: -154.49, Avg Steps: 472.00, Epsilon: 0.6369
Training episodes:  99%|█████████▉| 99/100 [18:33<00:13, 13.03s/it]WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`.
Training episodes: 100%|██████████| 100/100 [18:46<00:00, 11.26s/it]
WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`.
Episode 100/100 - Avg Reward: -139.84, Avg Steps: 472.00, Epsilon: 0.6058
Model saved to saved_models/default_agent.h5 after episode 100/100
Training completed. Final model saved to saved_models/default_agent.h5
生成分类任务数据集...
注入缺失值错误: 共注入 163 个单元格错误.
注入异常值错误: 共注入 151 个单元格错误.
注入噪声错误: 共注入 150 个单元格错误.
Evaluating strategies...
/Users/qianzekai/PycharmProjects/TolerDM/TolerRL/lib/python3.9/site-packages/gym/spaces/box.py:127: UserWarning: WARN: Box bound precision lowered by casting to float32
  logger.warn(f"Box bound precision lowered by casting to {self.dtype}")
Do Nothing: {'accuracy': 0.7666666666666667, 'f1_score': 0.7665006226650062}
Delete All: {'accuracy': 0.7533333333333333, 'f1_score': 0.7532346271842069}
Repair All: {'accuracy': 0.76, 'f1_score': 0.7599039615846339}
RL Optimal: {'accuracy': 0.7566666666666667, 'f1_score': 0.7565990552931371}
Running experiment with error rate: 0.3
生成分类任务数据集...
Feature importance: {'feature_0': 0.2824585000068432, 'feature_1': 0.2153621695810486, 'feature_2': 0.17430263794103798, 'feature_3': 0.14704031500347806, 'feature_4': 0.18083637746759226}
注入缺失值错误: 共注入 461 个单元格错误.
注入异常值错误: 共注入 427 个单元格错误.
/Users/qianzekai/PycharmProjects/TolerDM/TolerRL/lib/python3.9/site-packages/gym/spaces/box.py:127: UserWarning: WARN: Box bound precision lowered by casting to float32
  logger.warn(f"Box bound precision lowered by casting to {self.dtype}")
注入噪声错误: 共注入 401 个单元格错误.
  Testing model: random_forest
Training new model with learning rate: 0.001
Training episodes:  10%|█         | 10/100 [04:41<42:38, 28.42s/it]Episode 10/100 - Avg Reward: -1920.42, Avg Steps: 1289.00, Epsilon: 0.9511
Training episodes:  19%|█▉        | 19/100 [09:06<40:03, 29.68s/it]WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`.
Episode 20/100 - Avg Reward: -1783.20, Avg Steps: 1289.00, Epsilon: 0.9046
Model saved to saved_models/default_agent.h5 after episode 20/100
Training episodes:  30%|███       | 30/100 [14:49<36:42, 31.47s/it]Episode 30/100 - Avg Reward: -1610.93, Avg Steps: 1289.00, Epsilon: 0.8604
Training episodes:  39%|███▉      | 39/100 [19:40<33:12, 32.66s/it]WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`.
Episode 40/100 - Avg Reward: -1499.43, Avg Steps: 1289.00, Epsilon: 0.8183
Training episodes:  40%|████      | 40/100 [20:14<32:53, 32.88s/it]Model saved to saved_models/default_agent.h5 after episode 40/100
Training episodes:  50%|█████     | 50/100 [25:49<28:05, 33.70s/it]Episode 50/100 - Avg Reward: -1359.23, Avg Steps: 1289.00, Epsilon: 0.7783
Training episodes:  59%|█████▉    | 59/100 [31:05<24:11, 35.41s/it]WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`.
Episode 60/100 - Avg Reward: -1228.78, Avg Steps: 1289.00, Epsilon: 0.7403
Training episodes:  60%|██████    | 60/100 [31:40<23:30, 35.26s/it]Model saved to saved_models/default_agent.h5 after episode 60/100
Training episodes:  70%|███████   | 70/100 [37:47<18:24, 36.83s/it]Episode 70/100 - Avg Reward: -1129.91, Avg Steps: 1289.00, Epsilon: 0.7041
Training episodes:  79%|███████▉  | 79/100 [43:24<13:09, 37.60s/it]WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`.
Episode 80/100 - Avg Reward: -1057.96, Avg Steps: 1289.00, Epsilon: 0.6696
Training episodes:  80%|████████  | 80/100 [44:02<12:37, 37.88s/it]Model saved to saved_models/default_agent.h5 after episode 80/100
Training episodes:  90%|█████████ | 90/100 [50:30<06:30, 39.02s/it]Episode 90/100 - Avg Reward: -949.28, Avg Steps: 1289.00, Epsilon: 0.6369
Training episodes:  99%|█████████▉| 99/100 [56:26<00:39, 39.95s/it]WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`.
Training episodes: 100%|██████████| 100/100 [57:06<00:00, 34.27s/it]
WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`.
Episode 100/100 - Avg Reward: -883.34, Avg Steps: 1289.00, Epsilon: 0.6058
Model saved to saved_models/default_agent.h5 after episode 100/100
Training completed. Final model saved to saved_models/default_agent.h5
生成分类任务数据集...
注入缺失值错误: 共注入 466 个单元格错误.
注入异常值错误: 共注入 431 个单元格错误.
注入噪声错误: 共注入 380 个单元格错误.
Evaluating strategies...
/Users/qianzekai/PycharmProjects/TolerDM/TolerRL/lib/python3.9/site-packages/gym/spaces/box.py:127: UserWarning: WARN: Box bound precision lowered by casting to float32
  logger.warn(f"Box bound precision lowered by casting to {self.dtype}")
Do Nothing: {'accuracy': 0.76, 'f1_score': 0.7572379068512857}
Delete All: {'accuracy': 0.7133333333333334, 'f1_score': 0.7122976047102904}
Repair All: {'accuracy': 0.7066666666666667, 'f1_score': 0.7063403781979978}
RL Optimal: {'accuracy': 0.7333333333333333, 'f1_score': 0.731891505429197}
  Testing model: svm
/Users/qianzekai/PycharmProjects/TolerDM/TolerRL/lib/python3.9/site-packages/gym/spaces/box.py:127: UserWarning: WARN: Box bound precision lowered by casting to float32
  logger.warn(f"Box bound precision lowered by casting to {self.dtype}")
Training episodes:   0%|          | 0/100 [00:00<?, ?it/s]Training new model with learning rate: 0.001
Training episodes:  10%|█         | 10/100 [07:20<1:07:21, 44.90s/it]Episode 10/100 - Avg Reward: -1951.15, Avg Steps: 1289.00, Epsilon: 0.9511
Training episodes:  19%|█▉        | 19/100 [14:13<1:02:13, 46.09s/it]WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`.
Episode 20/100 - Avg Reward: -1757.14, Avg Steps: 1289.00, Epsilon: 0.9046
Training episodes:  20%|██        | 20/100 [15:00<1:02:07, 46.59s/it]Model saved to saved_models/default_agent.h5 after episode 20/100
Training episodes:  30%|███       | 30/100 [23:04<56:48, 48.70s/it]Episode 30/100 - Avg Reward: -1608.96, Avg Steps: 1289.00, Epsilon: 0.8604
Training episodes:  39%|███▉      | 39/100 [30:37<51:35, 50.74s/it]WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`.
Episode 40/100 - Avg Reward: -1468.86, Avg Steps: 1289.00, Epsilon: 0.8183
Model saved to saved_models/default_agent.h5 after episode 40/100
Training episodes:  50%|█████     | 50/100 [40:10<43:38, 52.36s/it]Episode 50/100 - Avg Reward: -1308.85, Avg Steps: 1289.00, Epsilon: 0.7783
Training episodes:  59%|█████▉    | 59/100 [48:17<36:54, 54.02s/it]WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`.
Episode 60/100 - Avg Reward: -1209.74, Avg Steps: 1289.00, Epsilon: 0.7403
Model saved to saved_models/default_agent.h5 after episode 60/100
Training episodes:  70%|███████   | 70/100 [58:32<28:16, 56.56s/it]Episode 70/100 - Avg Reward: -1115.18, Avg Steps: 1289.00, Epsilon: 0.7041
Training episodes:  79%|███████▉  | 79/100 [1:07:02<19:54, 56.89s/it]WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`.
Episode 80/100 - Avg Reward: -1035.10, Avg Steps: 1289.00, Epsilon: 0.6696
Training episodes:  80%|████████  | 80/100 [1:08:00<19:01, 57.08s/it]Model saved to saved_models/default_agent.h5 after episode 80/100
Training episodes:  90%|█████████ | 90/100 [1:17:43<09:51, 59.11s/it]Episode 90/100 - Avg Reward: -950.04, Avg Steps: 1289.00, Epsilon: 0.6369
Training episodes:  99%|█████████▉| 99/100 [1:26:47<01:00, 60.93s/it]WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`.
Training episodes: 100%|██████████| 100/100 [1:27:50<00:00, 52.70s/it]
WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`.
Episode 100/100 - Avg Reward: -860.13, Avg Steps: 1289.00, Epsilon: 0.6058
Model saved to saved_models/default_agent.h5 after episode 100/100
Training completed. Final model saved to saved_models/default_agent.h5
生成分类任务数据集...
注入缺失值错误: 共注入 481 个单元格错误.
注入异常值错误: 共注入 436 个单元格错误.
注入噪声错误: 共注入 403 个单元格错误.
/Users/qianzekai/PycharmProjects/TolerDM/TolerRL/lib/python3.9/site-packages/gym/spaces/box.py:127: UserWarning: WARN: Box bound precision lowered by casting to float32
  logger.warn(f"Box bound precision lowered by casting to {self.dtype}")
Evaluating strategies...
Do Nothing: {'accuracy': 0.8466666666666667, 'f1_score': 0.8436012511899904}
Delete All: {'accuracy': 0.8333333333333334, 'f1_score': 0.8289545703338806}
Repair All: {'accuracy': 0.8666666666666667, 'f1_score': 0.8647186147186149}
RL Optimal: {'accuracy': 0.8533333333333334, 'f1_score': 0.8504011967904256}
/Users/qianzekai/PycharmProjects/TolerDM/TolerRL/lib/python3.9/site-packages/gym/spaces/box.py:127: UserWarning: WARN: Box bound precision lowered by casting to float32
  logger.warn(f"Box bound precision lowered by casting to {self.dtype}")
  Testing model: logistic_regression
Training episodes:   0%|          | 0/100 [00:00<?, ?it/s]Training new model with learning rate: 0.001
Training episodes:  10%|█         | 10/100 [03:33<32:32, 21.70s/it]Episode 10/100 - Avg Reward: -1854.47, Avg Steps: 1289.00, Epsilon: 0.9511
Training episodes:  19%|█▉        | 19/100 [06:56<30:43, 22.76s/it]WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`.
Training episodes:  20%|██        | 20/100 [07:19<30:26, 22.84s/it]Episode 20/100 - Avg Reward: -1722.10, Avg Steps: 1289.00, Epsilon: 0.9046
Model saved to saved_models/default_agent.h5 after episode 20/100
Training episodes:  30%|███       | 30/100 [11:19<28:22, 24.33s/it]Episode 30/100 - Avg Reward: -1597.20, Avg Steps: 1289.00, Epsilon: 0.8604
Training episodes:  39%|███▉      | 39/100 [15:05<25:44, 25.31s/it]WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`.
Episode 40/100 - Avg Reward: -1474.11, Avg Steps: 1289.00, Epsilon: 0.8183
Model saved to saved_models/default_agent.h5 after episode 40/100
Training episodes:  50%|█████     | 50/100 [19:54<22:15, 26.70s/it]Episode 50/100 - Avg Reward: -1332.08, Avg Steps: 1289.00, Epsilon: 0.7783
Training episodes:  59%|█████▉    | 59/100 [24:01<18:45, 27.45s/it]WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`.
Episode 60/100 - Avg Reward: -1259.69, Avg Steps: 1289.00, Epsilon: 0.7403
Model saved to saved_models/default_agent.h5 after episode 60/100
Training episodes:  70%|███████   | 70/100 [29:16<14:22, 28.76s/it]Episode 70/100 - Avg Reward: -1108.25, Avg Steps: 1289.00, Epsilon: 0.7041
Training episodes:  79%|███████▉  | 79/100 [33:43<10:27, 29.87s/it]WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`.
Episode 80/100 - Avg Reward: -1055.86, Avg Steps: 1289.00, Epsilon: 0.6696
Model saved to saved_models/default_agent.h5 after episode 80/100
Training episodes:  90%|█████████ | 90/100 [39:22<05:12, 31.28s/it]Episode 90/100 - Avg Reward: -940.37, Avg Steps: 1289.00, Epsilon: 0.6369
Training episodes:  99%|█████████▉| 99/100 [44:08<00:31, 31.75s/it]WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`.
Episode 100/100 - Avg Reward: -856.80, Avg Steps: 1289.00, Epsilon: 0.6058
Training episodes: 100%|██████████| 100/100 [44:40<00:00, 26.80s/it]
WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`.
Model saved to saved_models/default_agent.h5 after episode 100/100
Training completed. Final model saved to saved_models/default_agent.h5
生成分类任务数据集...
注入缺失值错误: 共注入 461 个单元格错误.
注入异常值错误: 共注入 426 个单元格错误.
/Users/qianzekai/PycharmProjects/TolerDM/TolerRL/lib/python3.9/site-packages/gym/spaces/box.py:127: UserWarning: WARN: Box bound precision lowered by casting to float32
  logger.warn(f"Box bound precision lowered by casting to {self.dtype}")
/Users/qianzekai/PycharmProjects/TolerDM/DQN_extract.py:92: RuntimeWarning: More than 20 figures have been opened. Figures created through the pyplot interface (`matplotlib.pyplot.figure`) are retained until explicitly closed and may consume too much memory. (To control this warning, see the rcParam `figure.max_open_warning`). Consider using `matplotlib.pyplot.close()`.
  plt.figure(figsize=(8, 6))
注入噪声错误: 共注入 386 个单元格错误.
Evaluating strategies...
Do Nothing: {'accuracy': 0.7533333333333333, 'f1_score': 0.7530589543937708}
Delete All: {'accuracy': 0.74, 'f1_score': 0.7399884439308414}
Repair All: {'accuracy': 0.75, 'f1_score': 0.7497747973175858}
RL Optimal: {'accuracy': 0.75, 'f1_score': 0.7497747973175858}
Running experiment with error rate: 0.5
生成分类任务数据集...
Feature importance: {'feature_0': 0.09604816101300742, 'feature_1': 0.11356348513014414, 'feature_2': 0.4303698692146002, 'feature_3': 0.2733635279046971, 'feature_4': 0.08665495673755114}
注入缺失值错误: 共注入 736 个单元格错误.
注入异常值错误: 共注入 557 个单元格错误.
注入噪声错误: 共注入 463 个单元格错误.
  Testing model: random_forest
/Users/qianzekai/PycharmProjects/TolerDM/TolerRL/lib/python3.9/site-packages/gym/spaces/box.py:127: UserWarning: WARN: Box bound precision lowered by casting to float32
  logger.warn(f"Box bound precision lowered by casting to {self.dtype}")
Training new model with learning rate: 0.001
Training episodes:  10%|█         | 10/100 [05:39<51:37, 34.42s/it]Episode 10/100 - Avg Reward: -3225.85, Avg Steps: 1756.00, Epsilon: 0.9511
Training episodes:  19%|█▉        | 19/100 [11:04<49:06, 36.37s/it]WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`.
Episode 20/100 - Avg Reward: -2981.42, Avg Steps: 1756.00, Epsilon: 0.9046
Model saved to saved_models/default_agent.h5 after episode 20/100
Training episodes:  30%|███       | 30/100 [18:02<45:10, 38.72s/it]Episode 30/100 - Avg Reward: -2788.35, Avg Steps: 1756.00, Epsilon: 0.8604
Training episodes:  39%|███▉      | 39/100 [24:03<40:59, 40.32s/it]WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`.
Episode 40/100 - Avg Reward: -2564.57, Avg Steps: 1756.00, Epsilon: 0.8183
Model saved to saved_models/default_agent.h5 after episode 40/100
Training episodes:  50%|█████     | 50/100 [31:46<35:31, 42.64s/it]Episode 50/100 - Avg Reward: -2377.70, Avg Steps: 1756.00, Epsilon: 0.7783
Training episodes:  59%|█████▉    | 59/100 [38:21<30:23, 44.48s/it]WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`.
Episode 60/100 - Avg Reward: -2172.04, Avg Steps: 1756.00, Epsilon: 0.7403
Training episodes:  60%|██████    | 60/100 [39:05<29:33, 44.35s/it]Model saved to saved_models/default_agent.h5 after episode 60/100
Training episodes:  70%|███████   | 70/100 [46:46<23:11, 46.38s/it]Episode 70/100 - Avg Reward: -1940.29, Avg Steps: 1756.00, Epsilon: 0.7041
Training episodes:  79%|███████▉  | 79/100 [53:51<16:37, 47.49s/it]WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`.
Episode 80/100 - Avg Reward: -1800.93, Avg Steps: 1756.00, Epsilon: 0.6696
Model saved to saved_models/default_agent.h5 after episode 80/100
Training episodes:  90%|█████████ | 90/100 [1:02:48<08:13, 49.32s/it]Episode 90/100 - Avg Reward: -1668.52, Avg Steps: 1756.00, Epsilon: 0.6369
Training episodes:  99%|█████████▉| 99/100 [1:10:22<00:50, 50.73s/it]WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`.
Episode 100/100 - Avg Reward: -1505.85, Avg Steps: 1756.00, Epsilon: 0.6058
Model saved to saved_models/default_agent.h5 after episode 100/100
Training completed. Final model saved to saved_models/default_agent.h5
生成分类任务数据集...
Training episodes: 100%|██████████| 100/100 [1:11:12<00:00, 42.72s/it]
WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`.
注入缺失值错误: 共注入 734 个单元格错误.
注入异常值错误: 共注入 594 个单元格错误.
/Users/qianzekai/PycharmProjects/TolerDM/TolerRL/lib/python3.9/site-packages/gym/spaces/box.py:127: UserWarning: WARN: Box bound precision lowered by casting to float32
  logger.warn(f"Box bound precision lowered by casting to {self.dtype}")
注入噪声错误: 共注入 481 个单元格错误.
Evaluating strategies...
Do Nothing: {'accuracy': 0.7966666666666666, 'f1_score': 0.7964835018183031}
Delete All: {'accuracy': 0.7466666666666667, 'f1_score': 0.7465652927837803}
Repair All: {'accuracy': 0.7833333333333333, 'f1_score': 0.783215306111105}
RL Optimal: {'accuracy': 0.7933333333333333, 'f1_score': 0.793296586059744}
/Users/qianzekai/PycharmProjects/TolerDM/TolerRL/lib/python3.9/site-packages/gym/spaces/box.py:127: UserWarning: WARN: Box bound precision lowered by casting to float32
  logger.warn(f"Box bound precision lowered by casting to {self.dtype}")
  Testing model: svm
Training new model with learning rate: 0.001
Training episodes:  10%|█         | 10/100 [07:56<1:12:02, 48.03s/it]Episode 10/100 - Avg Reward: -3195.88, Avg Steps: 1756.00, Epsilon: 0.9511
Training episodes:  19%|█▉        | 19/100 [15:28<1:08:23, 50.66s/it]WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`.
Episode 20/100 - Avg Reward: -3044.99, Avg Steps: 1756.00, Epsilon: 0.9046
Training episodes:  20%|██        | 20/100 [16:20<1:08:05, 51.06s/it]Model saved to saved_models/default_agent.h5 after episode 20/100
Training episodes:  30%|███       | 30/100 [25:12<1:02:28, 53.54s/it]Episode 30/100 - Avg Reward: -2765.05, Avg Steps: 1756.00, Epsilon: 0.8604
Training episodes:  39%|███▉      | 39/100 [33:35<57:12, 56.28s/it]WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`.
Episode 40/100 - Avg Reward: -2532.55, Avg Steps: 1756.00, Epsilon: 0.8183
Training episodes:  40%|████      | 40/100 [34:31<56:09, 56.15s/it]Model saved to saved_models/default_agent.h5 after episode 40/100
Training episodes:  50%|█████     | 50/100 [44:09<48:40, 58.40s/it]Episode 50/100 - Avg Reward: -2301.98, Avg Steps: 1756.00, Epsilon: 0.7783
Training episodes:  59%|█████▉    | 59/100 [53:07<40:55, 59.90s/it]WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`.
Episode 60/100 - Avg Reward: -2157.28, Avg Steps: 1756.00, Epsilon: 0.7403
Model saved to saved_models/default_agent.h5 after episode 60/100
Training episodes:  70%|███████   | 70/100 [1:04:32<31:19, 62.67s/it]Episode 70/100 - Avg Reward: -2005.36, Avg Steps: 1756.00, Epsilon: 0.7041
Training episodes:  79%|███████▉  | 79/100 [1:14:16<22:47, 65.13s/it]WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`.
Episode 80/100 - Avg Reward: -1815.81, Avg Steps: 1756.00, Epsilon: 0.6696
Training episodes:  80%|████████  | 80/100 [1:15:20<21:32, 64.61s/it]Model saved to saved_models/default_agent.h5 after episode 80/100
Training episodes:  90%|█████████ | 90/100 [1:26:28<11:11, 67.18s/it]Episode 90/100 - Avg Reward: -1677.34, Avg Steps: 1756.00, Epsilon: 0.6369
Training episodes:  99%|█████████▉| 99/100 [1:36:50<01:09, 69.46s/it]WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`.
Episode 100/100 - Avg Reward: -1486.82, Avg Steps: 1756.00, Epsilon: 0.6058
Training episodes: 100%|██████████| 100/100 [1:38:01<00:00, 58.81s/it]
WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`.
Model saved to saved_models/default_agent.h5 after episode 100/100
Training completed. Final model saved to saved_models/default_agent.h5
生成分类任务数据集...
注入缺失值错误: 共注入 733 个单元格错误.
注入异常值错误: 共注入 610 个单元格错误.
/Users/qianzekai/PycharmProjects/TolerDM/TolerRL/lib/python3.9/site-packages/gym/spaces/box.py:127: UserWarning: WARN: Box bound precision lowered by casting to float32
  logger.warn(f"Box bound precision lowered by casting to {self.dtype}")
注入噪声错误: 共注入 486 个单元格错误.
Evaluating strategies...
Do Nothing: {'accuracy': 0.8433333333333334, 'f1_score': 0.8397271952259164}
Delete All: {'accuracy': 0.7966666666666666, 'f1_score': 0.7915503867139}
Repair All: {'accuracy': 0.8866666666666667, 'f1_score': 0.8851920219710955}
RL Optimal: {'accuracy': 0.8466666666666667, 'f1_score': 0.8432957848837209}
  Testing model: logistic_regression
/Users/qianzekai/PycharmProjects/TolerDM/TolerRL/lib/python3.9/site-packages/gym/spaces/box.py:127: UserWarning: WARN: Box bound precision lowered by casting to float32
  logger.warn(f"Box bound precision lowered by casting to {self.dtype}")
Training new model with learning rate: 0.001
Training episodes:  10%|█         | 10/100 [04:20<39:45, 26.50s/it]Episode 10/100 - Avg Reward: -3203.67, Avg Steps: 1756.00, Epsilon: 0.9511
Training episodes:  19%|█▉        | 19/100 [08:29<37:43, 27.95s/it]WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`.
Episode 20/100 - Avg Reward: -2914.10, Avg Steps: 1756.00, Epsilon: 0.9046
Training episodes:  20%|██        | 20/100 [08:57<37:30, 28.13s/it]Model saved to saved_models/default_agent.h5 after episode 20/100
Training episodes:  30%|███       | 30/100 [13:54<34:59, 29.99s/it]Episode 30/100 - Avg Reward: -2710.87, Avg Steps: 1756.00, Epsilon: 0.8604
Training episodes:  39%|███▉      | 39/100 [18:36<32:10, 31.65s/it]WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`.
Training episodes:  40%|████      | 40/100 [19:08<31:47, 31.79s/it]Episode 40/100 - Avg Reward: -2549.98, Avg Steps: 1756.00, Epsilon: 0.8183
Model saved to saved_models/default_agent.h5 after episode 40/100
Training episodes:  50%|█████     | 50/100 [24:38<27:40, 33.20s/it]Episode 50/100 - Avg Reward: -2450.36, Avg Steps: 1756.00, Epsilon: 0.7783
Training episodes:  59%|█████▉    | 59/100 [29:50<23:54, 35.00s/it]WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`.
Episode 60/100 - Avg Reward: -2142.06, Avg Steps: 1756.00, Epsilon: 0.7403
Training episodes:  60%|██████    | 60/100 [30:25<23:23, 35.08s/it]Model saved to saved_models/default_agent.h5 after episode 60/100
Training episodes:  70%|███████   | 70/100 [36:28<18:12, 36.43s/it]Episode 70/100 - Avg Reward: -1968.05, Avg Steps: 1756.00, Epsilon: 0.7041
Training episodes:  79%|███████▉  | 79/100 [42:06<13:14, 37.82s/it]WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`.
Episode 80/100 - Avg Reward: -1840.06, Avg Steps: 1756.00, Epsilon: 0.6696
Model saved to saved_models/default_agent.h5 after episode 80/100
Training episodes:  90%|█████████ | 90/100 [49:15<06:35, 39.54s/it]Episode 90/100 - Avg Reward: -1700.97, Avg Steps: 1756.00, Epsilon: 0.6369
Training episodes:  99%|█████████▉| 99/100 [55:21<00:40, 40.78s/it]WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`.
Episode 100/100 - Avg Reward: -1539.24, Avg Steps: 1756.00, Epsilon: 0.6058
Model saved to saved_models/default_agent.h5 after episode 100/100
Training completed. Final model saved to saved_models/default_agent.h5
生成分类任务数据集...
Training episodes: 100%|██████████| 100/100 [56:01<00:00, 33.62s/it]
WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`.
注入缺失值错误: 共注入 738 个单元格错误.
注入异常值错误: 共注入 587 个单元格错误.
注入噪声错误: 共注入 489 个单元格错误.
Evaluating strategies...
/Users/qianzekai/PycharmProjects/TolerDM/TolerRL/lib/python3.9/site-packages/gym/spaces/box.py:127: UserWarning: WARN: Box bound precision lowered by casting to float32
  logger.warn(f"Box bound precision lowered by casting to {self.dtype}")
Do Nothing: {'accuracy': 0.9, 'f1_score': 0.8999599839935976}
Delete All: {'accuracy': 0.8866666666666667, 'f1_score': 0.8866213151927438}
Repair All: {'accuracy': 0.9033333333333333, 'f1_score': 0.903332259247325}
RL Optimal: {'accuracy': 0.8966666666666666, 'f1_score': 0.896665518505761}
Running experiment with error rate: 0.7
生成分类任务数据集...
Feature importance: {'feature_0': 0.1476787108356198, 'feature_1': 0.350256886319131, 'feature_2': 0.1187976240236326, 'feature_3': 0.16093514293415503, 'feature_4': 0.22233163588746158}
注入缺失值错误: 共注入 1007 个单元格错误.
注入异常值错误: 共注入 773 个单元格错误.
注入噪声错误: 共注入 621 个单元格错误.
  Testing model: random_forest
/Users/qianzekai/PycharmProjects/TolerDM/TolerRL/lib/python3.9/site-packages/gym/spaces/box.py:127: UserWarning: WARN: Box bound precision lowered by casting to float32
  logger.warn(f"Box bound precision lowered by casting to {self.dtype}")
Training episodes:   0%|          | 0/100 [00:00<?, ?it/s]Training new model with learning rate: 0.001
Training episodes:  10%|█         | 10/100 [07:49<1:11:31, 47.68s/it]Episode 10/100 - Avg Reward: -5027.84, Avg Steps: 2401.00, Epsilon: 0.9511
Training episodes:  19%|█▉        | 19/100 [15:16<1:07:38, 50.10s/it]WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`.
Episode 20/100 - Avg Reward: -4705.95, Avg Steps: 2401.00, Epsilon: 0.9046
Training episodes:  20%|██        | 20/100 [16:07<1:07:13, 50.42s/it]Model saved to saved_models/default_agent.h5 after episode 20/100
Training episodes:  30%|███       | 30/100 [24:55<1:02:08, 53.27s/it]Episode 30/100 - Avg Reward: -4331.70, Avg Steps: 2401.00, Epsilon: 0.8604
Training episodes:  39%|███▉      | 39/100 [33:13<56:55, 55.99s/it]WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`.
Episode 40/100 - Avg Reward: -4083.56, Avg Steps: 2401.00, Epsilon: 0.8183
Model saved to saved_models/default_agent.h5 after episode 40/100
Training episodes:  50%|█████     | 50/100 [43:48<48:40, 58.42s/it]Episode 50/100 - Avg Reward: -3752.71, Avg Steps: 2401.00, Epsilon: 0.7783
Training episodes:  59%|█████▉    | 59/100 [52:55<41:52, 61.27s/it]WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`.
Episode 60/100 - Avg Reward: -3453.95, Avg Steps: 2401.00, Epsilon: 0.7403
Model saved to saved_models/default_agent.h5 after episode 60/100
Training episodes:  70%|███████   | 70/100 [1:04:25<31:51, 63.72s/it]Episode 70/100 - Avg Reward: -3307.22, Avg Steps: 2401.00, Epsilon: 0.7041
Training episodes:  79%|███████▉  | 79/100 [1:14:13<22:58, 65.63s/it]WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`.
Training episodes:  80%|████████  | 80/100 [1:15:18<21:52, 65.63s/it]Episode 80/100 - Avg Reward: -3041.42, Avg Steps: 2401.00, Epsilon: 0.6696
Model saved to saved_models/default_agent.h5 after episode 80/100
Training episodes:  90%|█████████ | 90/100 [1:26:31<11:17, 67.76s/it]Episode 90/100 - Avg Reward: -2766.43, Avg Steps: 2401.00, Epsilon: 0.6369
Training episodes:  99%|█████████▉| 99/100 [1:36:56<01:09, 69.66s/it]WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`.
Episode 100/100 - Avg Reward: -2574.22, Avg Steps: 2401.00, Epsilon: 0.6058
Model saved to saved_models/default_agent.h5 after episode 100/100
Training episodes: 100%|██████████| 100/100 [1:38:06<00:00, 58.86s/it]
WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`.
Training completed. Final model saved to saved_models/default_agent.h5
生成分类任务数据集...
注入缺失值错误: 共注入 1013 个单元格错误.
注入异常值错误: 共注入 798 个单元格错误.
/Users/qianzekai/PycharmProjects/TolerDM/TolerRL/lib/python3.9/site-packages/gym/spaces/box.py:127: UserWarning: WARN: Box bound precision lowered by casting to float32
  logger.warn(f"Box bound precision lowered by casting to {self.dtype}")
注入噪声错误: 共注入 661 个单元格错误.
Evaluating strategies...
Do Nothing: {'accuracy': 0.8366666666666667, 'f1_score': 0.8332406892718175}
Delete All: {'accuracy': 0.8266666666666667, 'f1_score': 0.8244113277204989}
Repair All: {'accuracy': 0.8733333333333333, 'f1_score': 0.8726484650788685}
RL Optimal: {'accuracy': 0.8566666666666667, 'f1_score': 0.8551196666629228}
  Testing model: svm
/Users/qianzekai/PycharmProjects/TolerDM/TolerRL/lib/python3.9/site-packages/gym/spaces/box.py:127: UserWarning: WARN: Box bound precision lowered by casting to float32
  logger.warn(f"Box bound precision lowered by casting to {self.dtype}")
Training new model with learning rate: 0.001
Training episodes:  10%|█         | 10/100 [11:49<1:47:19, 71.55s/it]Episode 10/100 - Avg Reward: -5051.26, Avg Steps: 2401.00, Epsilon: 0.9511
Training episodes:  19%|█▉        | 19/100 [23:08<1:41:54, 75.49s/it]WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`.
Episode 20/100 - Avg Reward: -4583.31, Avg Steps: 2401.00, Epsilon: 0.9046
Model saved to saved_models/default_agent.h5 after episode 20/100
Training episodes:  30%|███       | 30/100 [37:41<1:33:58, 80.55s/it]Episode 30/100 - Avg Reward: -4296.50, Avg Steps: 2401.00, Epsilon: 0.8604
Training episodes:  39%|███▉      | 39/100 [50:08<1:25:26, 84.04s/it]WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`.
Episode 40/100 - Avg Reward: -4023.35, Avg Steps: 2401.00, Epsilon: 0.8183
Model saved to saved_models/default_agent.h5 after episode 40/100
Training episodes:  50%|█████     | 50/100 [1:05:53<1:12:52, 87.45s/it]Episode 50/100 - Avg Reward: -3727.61, Avg Steps: 2401.00, Epsilon: 0.7783
Training episodes:  59%|█████▉    | 59/100 [1:19:17<1:01:19, 89.75s/it]WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`.
Episode 60/100 - Avg Reward: -3501.13, Avg Steps: 2401.00, Epsilon: 0.7403
Model saved to saved_models/default_agent.h5 after episode 60/100
Training episodes:  70%|███████   | 70/100 [1:36:32<47:14, 94.49s/it]Episode 70/100 - Avg Reward: -3239.52, Avg Steps: 2401.00, Epsilon: 0.7041
Training episodes:  79%|███████▉  | 79/100 [1:51:04<33:54, 96.89s/it]WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`.
Training episodes:  80%|████████  | 80/100 [1:52:43<32:32, 97.62s/it]Episode 80/100 - Avg Reward: -2938.06, Avg Steps: 2401.00, Epsilon: 0.6696
Model saved to saved_models/default_agent.h5 after episode 80/100
Training episodes:  90%|█████████ | 90/100 [2:09:24<16:51, 101.19s/it]Episode 90/100 - Avg Reward: -2834.64, Avg Steps: 2401.00, Epsilon: 0.6369
Training episodes:  99%|█████████▉| 99/100 [2:25:17<01:45, 105.43s/it]WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`.
Episode 100/100 - Avg Reward: -2447.65, Avg Steps: 2401.00, Epsilon: 0.6058
Training episodes: 100%|██████████| 100/100 [2:27:05<00:00, 88.25s/it]
WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`.
Model saved to saved_models/default_agent.h5 after episode 100/100
Training completed. Final model saved to saved_models/default_agent.h5
生成分类任务数据集...
注入缺失值错误: 共注入 1024 个单元格错误.
注入异常值错误: 共注入 757 个单元格错误.
注入噪声错误: 共注入 619 个单元格错误.
/Users/qianzekai/PycharmProjects/TolerDM/TolerRL/lib/python3.9/site-packages/gym/spaces/box.py:127: UserWarning: WARN: Box bound precision lowered by casting to float32
  logger.warn(f"Box bound precision lowered by casting to {self.dtype}")
Evaluating strategies...
Do Nothing: {'accuracy': 0.94, 'f1_score': 0.9397832195905259}
Delete All: {'accuracy': 0.9233333333333333, 'f1_score': 0.9233324814720163}
Repair All: {'accuracy': 0.93, 'f1_score': 0.9299805501528201}
RL Optimal: {'accuracy': 0.93, 'f1_score': 0.9298245614035087}
/Users/qianzekai/PycharmProjects/TolerDM/TolerRL/lib/python3.9/site-packages/gym/spaces/box.py:127: UserWarning: WARN: Box bound precision lowered by casting to float32
  logger.warn(f"Box bound precision lowered by casting to {self.dtype}")
  Testing model: logistic_regression
Training new model with learning rate: 0.001
Training episodes:  10%|█         | 10/100 [06:00<55:04, 36.72s/it]Episode 10/100 - Avg Reward: -4901.02, Avg Steps: 2401.00, Epsilon: 0.9511
Training episodes:  19%|█▉        | 19/100 [11:47<52:32, 38.92s/it]WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`.
Episode 20/100 - Avg Reward: -4789.95, Avg Steps: 2401.00, Epsilon: 0.9046
Training episodes:  20%|██        | 20/100 [12:27<52:17, 39.21s/it]Model saved to saved_models/default_agent.h5 after episode 20/100
Training episodes:  30%|███       | 30/100 [19:23<49:09, 42.13s/it]Episode 30/100 - Avg Reward: -4362.91, Avg Steps: 2401.00, Epsilon: 0.8604
Training episodes:  39%|███▉      | 39/100 [26:07<48:07, 47.33s/it]WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`.
Training episodes:  40%|████      | 40/100 [26:51<46:28, 46.48s/it]Episode 40/100 - Avg Reward: -4079.18, Avg Steps: 2401.00, Epsilon: 0.8183
Model saved to saved_models/default_agent.h5 after episode 40/100
Training episodes:  50%|█████     | 50/100 [34:34<39:12, 47.06s/it]Episode 50/100 - Avg Reward: -3774.23, Avg Steps: 2401.00, Epsilon: 0.7783
Training episodes:  59%|█████▉    | 59/100 [41:51<33:31, 49.06s/it]WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`.
Training episodes:  60%|██████    | 60/100 [42:40<32:44, 49.11s/it]Episode 60/100 - Avg Reward: -3523.64, Avg Steps: 2401.00, Epsilon: 0.7403
Model saved to saved_models/default_agent.h5 after episode 60/100
Training episodes:  70%|███████   | 70/100 [51:05<25:27, 50.92s/it]Episode 70/100 - Avg Reward: -3271.84, Avg Steps: 2401.00, Epsilon: 0.7041
Training episodes:  79%|███████▉  | 79/100 [58:57<18:25, 52.66s/it]WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`.
Episode 80/100 - Avg Reward: -2984.28, Avg Steps: 2401.00, Epsilon: 0.6696
Model saved to saved_models/default_agent.h5 after episode 80/100
Training episodes:  90%|█████████ | 90/100 [1:08:59<09:13, 55.40s/it]Episode 90/100 - Avg Reward: -2745.07, Avg Steps: 2401.00, Epsilon: 0.6369
Training episodes:  99%|█████████▉| 99/100 [1:17:28<00:56, 56.86s/it]WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`.
Episode 100/100 - Avg Reward: -2556.56, Avg Steps: 2401.00, Epsilon: 0.6058
Model saved to saved_models/default_agent.h5 after episode 100/100
Training completed. Final model saved to saved_models/default_agent.h5
生成分类任务数据集...
Training episodes: 100%|██████████| 100/100 [1:18:24<00:00, 47.05s/it]
WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`.
注入缺失值错误: 共注入 1014 个单元格错误.
注入异常值错误: 共注入 793 个单元格错误.
注入噪声错误: 共注入 622 个单元格错误.
Evaluating strategies...
/Users/qianzekai/PycharmProjects/TolerDM/TolerRL/lib/python3.9/site-packages/gym/spaces/box.py:127: UserWarning: WARN: Box bound precision lowered by casting to float32
  logger.warn(f"Box bound precision lowered by casting to {self.dtype}")
Do Nothing: {'accuracy': 0.7233333333333334, 'f1_score': 0.7231826216495647}
Delete All: {'accuracy': 0.6733333333333333, 'f1_score': 0.6469571064892646}
Repair All: {'accuracy': 0.7266666666666667, 'f1_score': 0.7266180654338549}
RL Optimal: {'accuracy': 0.7266666666666667, 'f1_score': 0.7266545179785768}
Running experiment with error rate: 0.9
生成分类任务数据集...
Feature importance: {'feature_0': 0.16171844379578917, 'feature_1': 0.2540182326310616, 'feature_2': 0.14712621423244115, 'feature_3': 0.13309759407345365, 'feature_4': 0.30403951526725453}
注入缺失值错误: 共注入 1275 个单元格错误.
注入异常值错误: 共注入 910 个单元格错误.
/Users/qianzekai/PycharmProjects/TolerDM/TolerRL/lib/python3.9/site-packages/gym/spaces/box.py:127: UserWarning: WARN: Box bound precision lowered by casting to float32
  logger.warn(f"Box bound precision lowered by casting to {self.dtype}")
注入噪声错误: 共注入 683 个单元格错误.
  Testing model: random_forest
Training new model with learning rate: 0.001
Training episodes:  10%|█         | 10/100 [08:41<1:19:26, 52.96s/it]Episode 10/100 - Avg Reward: -6278.28, Avg Steps: 2868.00, Epsilon: 0.9511
Training episodes:  19%|█▉        | 19/100 [17:03<1:15:42, 56.08s/it]WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`.
Episode 20/100 - Avg Reward: -5959.55, Avg Steps: 2868.00, Epsilon: 0.9046
Model saved to saved_models/default_agent.h5 after episode 20/100
Training episodes:  30%|███       | 30/100 [27:54<1:10:00, 60.00s/it]Episode 30/100 - Avg Reward: -5504.90, Avg Steps: 2868.00, Epsilon: 0.8604
Training episodes:  39%|███▉      | 39/100 [37:18<1:04:28, 63.42s/it]WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`.
Episode 40/100 - Avg Reward: -5071.41, Avg Steps: 2868.00, Epsilon: 0.8183
Training episodes:  40%|████      | 40/100 [38:22<1:03:24, 63.40s/it]Model saved to saved_models/default_agent.h5 after episode 40/100
Training episodes:  50%|█████     | 50/100 [49:22<55:31, 66.63s/it]Episode 50/100 - Avg Reward: -4742.01, Avg Steps: 2868.00, Epsilon: 0.7783
Training episodes:  59%|█████▉    | 59/100 [59:41<47:00, 68.80s/it]WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`.
Episode 60/100 - Avg Reward: -4441.36, Avg Steps: 2868.00, Epsilon: 0.7403
Training episodes:  60%|██████    | 60/100 [1:00:52<46:17, 69.44s/it]Model saved to saved_models/default_agent.h5 after episode 60/100
Training episodes:  70%|███████   | 70/100 [1:12:44<35:58, 71.96s/it]Episode 70/100 - Avg Reward: -4261.17, Avg Steps: 2868.00, Epsilon: 0.7041
Training episodes:  79%|███████▉  | 79/100 [1:23:47<25:51, 73.88s/it]WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`.
Episode 80/100 - Avg Reward: -3939.50, Avg Steps: 2868.00, Epsilon: 0.6696
Model saved to saved_models/default_agent.h5 after episode 80/100
Training episodes:  90%|█████████ | 90/100 [1:37:50<12:53, 77.33s/it]Episode 90/100 - Avg Reward: -3602.70, Avg Steps: 2868.00, Epsilon: 0.6369
Training episodes:  94%|█████████▍| 94/100 [1:43:08<07:55, 79.28s/it]

Training episodes:  99%|█████████▉| 99/100 [1:49:56<01:20, 80.64s/it]WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`.
Episode 100/100 - Avg Reward: -3337.90, Avg Steps: 2868.00, Epsilon: 0.6058
Training episodes: 100%|██████████| 100/100 [1:51:17<00:00, 66.77s/it]
WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`.
Model saved to saved_models/default_agent.h5 after episode 100/100
Training completed. Final model saved to saved_models/default_agent.h5
生成分类任务数据集...
注入缺失值错误: 共注入 1269 个单元格错误.
注入异常值错误: 共注入 926 个单元格错误.
注入噪声错误: 共注入 715 个单元格错误.
/Users/qianzekai/PycharmProjects/TolerDM/TolerRL/lib/python3.9/site-packages/gym/spaces/box.py:127: UserWarning: WARN: Box bound precision lowered by casting to float32
  logger.warn(f"Box bound precision lowered by casting to {self.dtype}")
Evaluating strategies...
Do Nothing: {'accuracy': 0.76, 'f1_score': 0.7596153846153846}
Delete All: {'accuracy': 0.6566666666666666, 'f1_score': 0.6507645882073712}
Repair All: {'accuracy': 0.7566666666666667, 'f1_score': 0.7566639629329215}
RL Optimal: {'accuracy': 0.77, 'f1_score': 0.7699974444160491}
/Users/qianzekai/PycharmProjects/TolerDM/TolerRL/lib/python3.9/site-packages/gym/spaces/box.py:127: UserWarning: WARN: Box bound precision lowered by casting to float32
  logger.warn(f"Box bound precision lowered by casting to {self.dtype}")
  Testing model: svm
Training new model with learning rate: 0.001
Training episodes:  10%|█         | 10/100 [12:47<1:58:10, 78.78s/it]Episode 10/100 - Avg Reward: -6314.70, Avg Steps: 2868.00, Epsilon: 0.9511
Training episodes:  19%|█▉        | 19/100 [25:16<1:53:40, 84.20s/it]WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`.
Episode 20/100 - Avg Reward: -5896.03, Avg Steps: 2868.00, Epsilon: 0.9046
Model saved to saved_models/default_agent.h5 after episode 20/100
Training episodes:  30%|███       | 30/100 [41:17<1:41:49, 87.28s/it]Episode 30/100 - Avg Reward: -5564.20, Avg Steps: 2868.00, Epsilon: 0.8604
Training episodes:  39%|███▉      | 39/100 [54:35<1:30:53, 89.40s/it]WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`.
Episode 40/100 - Avg Reward: -5167.44, Avg Steps: 2868.00, Epsilon: 0.8183
Model saved to saved_models/default_agent.h5 after episode 40/100
Training episodes:  50%|█████     | 50/100 [1:11:49<1:19:03, 94.88s/it]Episode 50/100 - Avg Reward: -4874.26, Avg Steps: 2868.00, Epsilon: 0.7783
Training episodes:  59%|█████▉    | 59/100 [1:26:35<1:07:40, 99.03s/it]WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`.
Training episodes:  60%|██████    | 60/100 [1:28:17<1:06:30, 99.77s/it]Episode 60/100 - Avg Reward: -4497.69, Avg Steps: 2868.00, Epsilon: 0.7403
Model saved to saved_models/default_agent.h5 after episode 60/100
Training episodes:  70%|███████   | 70/100 [1:45:29<51:32, 103.09s/it]Episode 70/100 - Avg Reward: -4189.11, Avg Steps: 2868.00, Epsilon: 0.7041
Training episodes:  76%|███████▌  | 76/100 [1:55:53<41:39, 104.15s/it]
Training episodes:  79%|███████▉  | 79/100 [2:01:22<37:49, 108.07s/it]WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`.
Episode 80/100 - Avg Reward: -3867.49, Avg Steps: 2868.00, Epsilon: 0.6696
Model saved to saved_models/default_agent.h5 after episode 80/100
Training episodes:  90%|█████████ | 90/100 [2:21:46<18:43, 112.36s/it]Episode 90/100 - Avg Reward: -3621.66, Avg Steps: 2868.00, Epsilon: 0.6369
Training episodes:  99%|█████████▉| 99/100 [2:39:01<01:55, 115.17s/it]WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`.
Episode 100/100 - Avg Reward: -3301.00, Avg Steps: 2868.00, Epsilon: 0.6058
Training episodes: 100%|██████████| 100/100 [2:40:56<00:00, 96.57s/it]
WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`.
Model saved to saved_models/default_agent.h5 after episode 100/100
Training completed. Final model saved to saved_models/default_agent.h5
生成分类任务数据集...
注入缺失值错误: 共注入 1263 个单元格错误.
注入异常值错误: 共注入 920 个单元格错误.
注入噪声错误: 共注入 674 个单元格错误.
/Users/qianzekai/PycharmProjects/TolerDM/TolerRL/lib/python3.9/site-packages/gym/spaces/box.py:127: UserWarning: WARN: Box bound precision lowered by casting to float32
  logger.warn(f"Box bound precision lowered by casting to {self.dtype}")
Evaluating strategies...
Do Nothing: {'accuracy': 0.8433333333333334, 'f1_score': 0.8432898027229786}
Delete All: {'accuracy': 0.56, 'f1_score': 0.5561334289813485}
Repair All: {'accuracy': 0.8566666666666667, 'f1_score': 0.8554961857714151}
RL Optimal: {'accuracy': 0.83, 'f1_score': 0.8295739348370927}
  Testing model: logistic_regression
/Users/qianzekai/PycharmProjects/TolerDM/TolerRL/lib/python3.9/site-packages/gym/spaces/box.py:127: UserWarning: WARN: Box bound precision lowered by casting to float32
  logger.warn(f"Box bound precision lowered by casting to {self.dtype}")
Training new model with learning rate: 0.001
Training episodes:  10%|█         | 10/100 [07:05<1:05:04, 43.39s/it]Episode 10/100 - Avg Reward: -6382.43, Avg Steps: 2868.00, Epsilon: 0.9511
Training episodes:  19%|█▉        | 19/100 [13:59<1:02:51, 46.56s/it]WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`.
Training episodes:  20%|██        | 20/100 [14:46<1:02:11, 46.64s/it]Episode 20/100 - Avg Reward: -5946.13, Avg Steps: 2868.00, Epsilon: 0.9046
Model saved to saved_models/default_agent.h5 after episode 20/100
Training episodes:  30%|███       | 30/100 [22:59<58:35, 50.23s/it]Episode 30/100 - Avg Reward: -5490.85, Avg Steps: 2868.00, Epsilon: 0.8604
Training episodes:  39%|███▉      | 39/100 [30:41<52:17, 51.43s/it]WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`.
Episode 40/100 - Avg Reward: -5231.50, Avg Steps: 2868.00, Epsilon: 0.8183
Training episodes:  40%|████      | 40/100 [31:34<51:50, 51.85s/it]Model saved to saved_models/default_agent.h5 after episode 40/100
Training episodes:  50%|█████     | 50/100 [40:44<46:19, 55.59s/it]Episode 50/100 - Avg Reward: -4798.65, Avg Steps: 2868.00, Epsilon: 0.7783
Training episodes:  59%|█████▉    | 59/100 [49:22<39:56, 58.45s/it]WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`.
Episode 60/100 - Avg Reward: -4484.48, Avg Steps: 2868.00, Epsilon: 0.7403
Training episodes:  60%|██████    | 60/100 [50:21<38:59, 58.49s/it]Model saved to saved_models/default_agent.h5 after episode 60/100
Training episodes:  70%|███████   | 70/100 [1:00:29<30:16, 60.54s/it]Episode 70/100 - Avg Reward: -4186.71, Avg Steps: 2868.00, Epsilon: 0.7041
Training episodes:  79%|███████▉  | 79/100 [1:09:57<22:19, 63.77s/it]WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`.
Episode 80/100 - Avg Reward: -3838.96, Avg Steps: 2868.00, Epsilon: 0.6696
Model saved to saved_models/default_agent.h5 after episode 80/100
Training episodes:  90%|█████████ | 90/100 [1:21:54<10:54, 65.46s/it]Episode 90/100 - Avg Reward: -3639.79, Avg Steps: 2868.00, Epsilon: 0.6369
Training episodes:  99%|█████████▉| 99/100 [1:31:55<01:07, 67.08s/it]WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`.
Episode 100/100 - Avg Reward: -3312.83, Avg Steps: 2868.00, Epsilon: 0.6058
Model saved to saved_models/default_agent.h5 after episode 100/100
Training completed. Final model saved to saved_models/default_agent.h5
生成分类任务数据集...
Training episodes: 100%|██████████| 100/100 [1:33:03<00:00, 55.83s/it]
WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`.
注入缺失值错误: 共注入 1289 个单元格错误.
注入异常值错误: 共注入 921 个单元格错误.
/Users/qianzekai/PycharmProjects/TolerDM/TolerRL/lib/python3.9/site-packages/gym/spaces/box.py:127: UserWarning: WARN: Box bound precision lowered by casting to float32
  logger.warn(f"Box bound precision lowered by casting to {self.dtype}")
注入噪声错误: 共注入 683 个单元格错误.
Evaluating strategies...
Do Nothing: {'accuracy': 0.6766666666666666, 'f1_score': 0.6763754045307443}
Delete All: {'accuracy': 0.5766666666666667, 'f1_score': 0.4877310924369748}
Repair All: {'accuracy': 0.7066666666666667, 'f1_score': 0.7061965811965812}
RL Optimal: {'accuracy': 0.6933333333333334, 'f1_score': 0.692992213570634}

===== 关键量化结果 =====

1. 低错误率(0.1)下的动作分布:
   random_forest: 不作为=63.2%, 修复=15.8%, 删除=21.0%
   svm: 不作为=57.1%, 修复=22.0%, 删除=20.9%
   logistic_regression: 不作为=61.0%, 修复=22.2%, 删除=16.8%

2. 高错误率(0.9)下的动作分布:
   random_forest: 不作为=61.0%, 修复=19.4%, 删除=19.7%
   svm: 不作为=59.7%, 修复=20.1%, 删除=20.2%
   logistic_regression: 不作为=59.7%, 修复=20.7%, 删除=19.6%

3. 不同模型的平均容忍度:
   random_forest: 平均容忍度=90.9%
   svm: 平均容忍度=28.2%
   logistic_regression: 平均容忍度=51.1%

4. RL策略与全部修复的性能比较:
   random_forest: RL=78.1%, 全部修复=77.2%, 比例=101.2%
   svm: RL=84.5%, 全部修复=86.2%, 比例=98.0%
   logistic_regression: RL=76.5%, 全部修复=76.9%, 比例=99.4%

5. 动作成本效益分析:
   random_forest: 减少修复=80.0%, 减少删除=80.7%, 性能保持=101.3%
   svm: 减少修复=79.1%, 减少删除=79.4%, 性能保持=98.0%
   logistic_regression: 减少修复=78.9%, 减少删除=80.8%, 性能保持=99.4%

6. 错误率阈值分析:
   random_forest: 性能显著下降阈值=0.9
   svm: 性能显著下降阈值=0.9
   logistic_regression: 性能显著下降阈值=0.9

7. 模型敏感度分析:
   random_forest: 修复敏感度=0.04, 性能敏感度=-0.02
   svm: 修复敏感度=-0.02, 性能敏感度=-0.08
   logistic_regression: 修复敏感度=-0.02, 性能敏感度=0.08

8. 模型容忍度排名:
   第1名: random_forest (容忍度=0.91)
   第2名: logistic_regression (容忍度=0.51)
   第3名: svm (容忍度=0.28)

进程已结束，退出代码为 0
